{
  "version": 3,
  "sources": ["browser-route-module:routes/_auth.register.tsx?browser", "../../../app/routes/_auth.register.tsx"],
  "sourcesContent": ["export { default, meta } from \"./routes/_auth.register.tsx\";", "import {\n    ActionFunction,\n    HeadersFunction,\n    json,\n    redirect,\n    V2_MetaFunction,\n} from '@remix-run/node'\nimport { useActionData } from '@remix-run/react'\nimport { createValidator } from '~/utils/validation/validation.boilerplate'\n\nimport { ValidatedForm } from 'remix-validated-form'\nimport { Link } from '@remix-run/react'\nimport { Button } from '@mui/material'\nimport { TextField } from '~/components/form'\n\nimport { registerUser } from '~/actions/auth.actions'\n\nconst validator = createValidator(\n    new Set(['email', 'password', 'tel', 'cnpj', 'meiName', 'name'])\n)\n\nexport const headers: HeadersFunction = () => ({\n    'Cache-Control': 'private, max-age=604800',\n})\n\nexport const meta: V2_MetaFunction = () => [\n    {\n        title: 'Cadastro - Mei Invoices',\n    },\n]\n\nexport const action: ActionFunction = async ({ request }) => {\n    let formData = await request.formData()\n    let validate = await validator.validate(formData)\n    if (!validate.data)\n        return json(\n            { message: 'Verifique seus campos.', logged: false },\n            { status: 400 }\n        )\n    let data = validate.data\n    try {\n        await registerUser(data)\n    } catch (e) {\n        return json(\n            {\n                message: 'Erro ao criar usu\u00E1rio ou usu\u00E1rio existente.',\n                logged: false,\n            },\n            { status: 400 }\n        )\n    }\n    throw redirect('/login')\n}\n\nexport default function Register() {\n    const action = useActionData()\n\n    return (\n        <ValidatedForm\n            className=\"auth__form auth__form--extended\"\n            validator={validator}\n            method=\"POST\"\n        >\n            {action?.logged == false ? (\n                <p className=\"auth__error\">{action?.message}</p>\n            ) : (\n                <></>\n            )}\n            <div className=\"auth__row\">\n                <TextField\n                    variant=\"outlined\"\n                    type=\"text\"\n                    label=\"Nome\"\n                    name=\"name\"\n                ></TextField>\n                <TextField\n                    variant=\"outlined\"\n                    type=\"text\"\n                    label=\"Nome da Empresa\"\n                    name=\"meiName\"\n                ></TextField>\n            </div>\n            <div className=\"auth__row\">\n                <TextField\n                    variant=\"outlined\"\n                    type=\"email\"\n                    label=\"E-mail\"\n                    name=\"email\"\n                    placeholder=\"email@example.com\"\n                ></TextField>\n                <TextField\n                    variant=\"outlined\"\n                    type=\"text\"\n                    label=\"CNPJ\"\n                    name=\"cnpj\"\n                    placeholder=\"99.999.999/9999-99\"\n                    mask=\"99.999.999/9999-99\"\n                ></TextField>\n            </div>\n            <div className=\"auth__row\">\n                <TextField\n                    variant=\"outlined\"\n                    type=\"password\"\n                    label=\"Senha\"\n                    name=\"password\"\n                ></TextField>\n                <TextField\n                    variant=\"outlined\"\n                    type=\"tel\"\n                    label=\"Telefone\"\n                    name=\"tel\"\n                    placeholder=\"(99) 99999-9999\"\n                    mask=\"(99) 99999-9999\"\n                ></TextField>\n            </div>\n            <Button variant=\"contained\" type=\"submit\">\n                Cadastrar-se\n            </Button>\n            <span>J\u00E1 tem uma conta?</span>\n            <Link to=\"/login\">Entre agora</Link>\n        </ValidatedForm>\n    )\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAGA;AACA;AAqDgB;AA/ChB,IAAM,YAAY;AAAA,EACd,oBAAI,IAAI,CAAC,SAAS,YAAY,OAAO,QAAQ,WAAW,MAAM,CAAC;AACnE;AAMO,IAAM,OAAwB,MAAM;AAAA,EACvC;AAAA,IACI,OAAO;AAAA,EACX;AACJ;AAyBe,SAAR,WAA4B;AAC/B,QAAM,SAAS,cAAc;AAE7B,SACI;AAAA,IAAC;AAAA;AAAA,MACG,WAAU;AAAA,MACV;AAAA,MACA,QAAO;AAAA,MAEN;AAAA,0CAAQ,WAAU,QACf,mDAAC,OAAE,WAAU,eAAe,2CAAQ,WAApC;AAAA;AAAA;AAAA;AAAA,eAA4C,IAE5C;AAAA;AAAA;AAAA;AAAA,eAAE;AAAA,QAEN,mDAAC,SAAI,WAAU,aACX;AAAA;AAAA,YAAC;AAAA;AAAA,cACG,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,OAAM;AAAA,cACN,MAAK;AAAA;AAAA,YAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKC;AAAA,UACD;AAAA,YAAC;AAAA;AAAA,cACG,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,OAAM;AAAA,cACN,MAAK;AAAA;AAAA,YAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKC;AAAA,aAZL;AAAA;AAAA;AAAA;AAAA,eAaA;AAAA,QACA,mDAAC,SAAI,WAAU,aACX;AAAA;AAAA,YAAC;AAAA;AAAA,cACG,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,OAAM;AAAA,cACN,MAAK;AAAA,cACL,aAAY;AAAA;AAAA,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMC;AAAA,UACD;AAAA,YAAC;AAAA;AAAA,cACG,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,OAAM;AAAA,cACN,MAAK;AAAA,cACL,aAAY;AAAA,cACZ,MAAK;AAAA;AAAA,YANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOC;AAAA,aAfL;AAAA;AAAA;AAAA;AAAA,eAgBA;AAAA,QACA,mDAAC,SAAI,WAAU,aACX;AAAA;AAAA,YAAC;AAAA;AAAA,cACG,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,OAAM;AAAA,cACN,MAAK;AAAA;AAAA,YAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKC;AAAA,UACD;AAAA,YAAC;AAAA;AAAA,cACG,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,OAAM;AAAA,cACN,MAAK;AAAA,cACL,aAAY;AAAA,cACZ,MAAK;AAAA;AAAA,YANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOC;AAAA,aAdL;AAAA;AAAA;AAAA;AAAA,eAeA;AAAA,QACA,mDAAC,kBAAO,SAAQ,aAAY,MAAK,UAAS,4BAA1C;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,UAAK,oCAAN;AAAA;AAAA;AAAA;AAAA,eAAuB;AAAA,QACvB,mDAAC,QAAK,IAAG,UAAS,2BAAlB;AAAA;AAAA;AAAA;AAAA,eAA6B;AAAA;AAAA;AAAA,IA7DjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA8DA;AAER;",
  "names": []
}
